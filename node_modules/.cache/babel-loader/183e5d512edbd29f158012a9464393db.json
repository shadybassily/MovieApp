{"ast":null,"code":"var _jsxFileName = \"/home/shady/iti/react/react practice/movieapp/src/Pages/Movies/MovieDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { AxiosInstance } from \"../../Network/AxiosInstance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieDetails() {\n  _s();\n\n  const [movie, setMovieDetails] = useState({});\n  const params = useParams();\n  useEffect(() => {\n    let isMounted = true;\n    AxiosInstance.get(`${params.id}?api_key=0635aa13dcf8f77aa3d3a659b24086cc`).then(res => {\n      if (isMounted) setMovieDetails(res.data);\n    }).catch(err => console.log(err));\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    classNameName: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3 m-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row g-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`,\n            className: \"img-fluid rounded-start\",\n            alt: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"card-title\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: movie.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: movie.release_date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 19\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieDetails, \"whmKGegp5Oul81oo040Xu9h3TpI=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"sources":["/home/shady/iti/react/react practice/movieapp/src/Pages/Movies/MovieDetails.js"],"names":["React","useEffect","useState","useParams","AxiosInstance","MovieDetails","movie","setMovieDetails","params","isMounted","get","id","then","res","data","catch","err","console","log","backdrop_path","title","overview","release_date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,aAAT,QAA8B,6BAA9B;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,eAAR,IAA2BL,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAMM,MAAM,GAAGL,SAAS,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,SAAS,GAAG,IAAhB;AACAL,IAAAA,aAAa,CAACM,GAAd,CAAmB,GAAEF,MAAM,CAACG,EAAG,2CAA/B,EACGC,IADH,CACSC,GAAD,IAAS;AACb,UAAIJ,SAAJ,EAAeF,eAAe,CAACM,GAAG,CAACC,IAAL,CAAf;AAChB,KAHH,EAIGC,KAJH,CAIUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJlB;AAKA,WAAO,MAAM;AACXP,MAAAA,SAAS,GAAG,KAAZ;AACD,KAFD,CAPc,CASX;AACJ,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAK,IAAA,aAAa,EAAC,WAAnB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE;AACE,YAAA,GAAG,EAAG,mCAAkCH,KAAK,CAACa,aAAc,EAD9D;AAEE,YAAA,SAAS,EAAC,yBAFZ;AAGE,YAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4Bb,KAAK,CAACc;AAAlC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAG,cAAA,SAAS,EAAC,WAAb;AAAA,wBAA0Bd,KAAK,CAACe;AAAhC;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAG,cAAA,SAAS,EAAC,WAAb;AAAA,qCACE;AAAO,gBAAA,SAAS,EAAC,YAAjB;AAAA,wCACE;AAAA,4BAAIf,KAAK,CAACgB;AAAV;AAAA;AAAA;AAAA;AAAA,wBADF,EAC8B,GAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA1CuBjB,Y;UAEPF,S;;;KAFOE,Y","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { AxiosInstance } from \"../../Network/AxiosInstance\";\n\nexport default function MovieDetails() {\n  const [movie, setMovieDetails] = useState({});\n  const params = useParams();\n\n  useEffect(() => {\n    let isMounted = true;\n    AxiosInstance.get(`${params.id}?api_key=0635aa13dcf8f77aa3d3a659b24086cc`)\n      .then((res) => {\n        if (isMounted) setMovieDetails(res.data);\n      })\n      .catch((err) => console.log(err));\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, []);\n\n  return (\n    <div classNameName=\"container\">\n      <div className=\"card mb-3 m-5\">\n        <div className=\"row g-0\" >\n          <div className=\"col-md-4\" >\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`}\n              className=\"img-fluid rounded-start\"\n              alt=\"...\"\n            />\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"card-body\">\n              <h3 className=\"card-title\">{movie.title}</h3>\n              <p className=\"card-text\">{movie.overview}</p>\n              <p className=\"card-text\">\n                <small className=\"text-muted\">\n                  <p>{movie.release_date}</p>{\" \"}\n                </small>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}