{"ast":null,"code":"var _jsxFileName = \"/home/shady/iti/react/react practice/movieapp/src/Pages/Movies/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../../Components/Spinner/Spinner';\nimport { AxiosInstance } from '../../Network/AxiosInstance';\nimport { setSpinner } from '../../store/actions/Spinner';\nimport './Movies.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Movies() {\n  _s();\n\n  //movies\n  const [movies, setMovies] = useState([]); //if loading\n\n  const isloading = useSelector(state => state.spinner.isloading); //dispatch\n\n  const dispatch = useDispatch(); //getting movies \n\n  useEffect(() => {\n    let isMounted = true;\n    AxiosInstance.get('popular?api_key=0635aa13dcf8f77aa3d3a659b24086cc').then(res => {\n      setMovies(res.data.results);\n      dispatch(setSpinner(false));\n    }).catch(err => console.log(err));\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, []);\n\n  const addToFav = () => {\n    console.log('added');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid \",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"p-3\",\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), isloading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex justify-content-center \",\n      children: movies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card col-3 mx-2 my-2 movie-card-background \",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/movie/${movie.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`,\n              className: \"card-img-top movie-card\",\n              alt: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: e => addToFav(),\n              children: \"add to fav\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Movies, \"QoaAMrvoJihTEU9GeYFnxcWSlbE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/home/shady/iti/react/react practice/movieapp/src/Pages/Movies/Movies.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","Spinner","AxiosInstance","setSpinner","Movies","movies","setMovies","isloading","state","spinner","dispatch","isMounted","get","then","res","data","results","catch","err","console","log","addToFav","map","movie","id","backdrop_path","title","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAO,cAAP;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC7B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAoBT,QAAQ,CAAC,EAAD,CAAlC,CAF6B,CAG7B;;AACA,QAAMU,SAAS,GAAGR,WAAW,CAAES,KAAD,IAAUA,KAAK,CAACC,OAAN,CAAcF,SAAzB,CAA7B,CAJ6B,CAK7B;;AACA,QAAMG,QAAQ,GAAGZ,WAAW,EAA5B,CAN6B,CAQ7B;;AACAF,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIe,SAAS,GAAG,IAAhB;AACAT,IAAAA,aAAa,CACZU,GADD,CACK,kDADL,EAECC,IAFD,CAEOC,GAAD,IAAO;AACTR,MAAAA,SAAS,CAACQ,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAT;AACAN,MAAAA,QAAQ,CAACP,UAAU,CAAC,KAAD,CAAX,CAAR;AAEH,KAND,EAOCc,KAPD,CAOQC,GAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPd;AAQA,WAAO,MAAM;AAAEP,MAAAA,SAAS,GAAG,KAAZ;AAAmB,KAAlC,CAVU,CAU0B;AACvC,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMU,QAAQ,GAAG,MAAI;AACjBF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,GAFD;;AAIF,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKb,SAAS,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBACN;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA,gBAEKF,MAAM,CAACiB,GAAP,CAAWC,KAAK,IAAI;AACjB,4BACI;AAAK,UAAA,SAAS,EAAC,6CAAf;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASA,KAAK,CAACC,EAAG,EAA7B;AAAA,mCACI;AAAK,cAAA,GAAG,EAAG,mCAAkCD,KAAK,CAACE,aAAc,EAAjE;AAAoE,cAAA,SAAS,EAAC,yBAA9E;AAAwG,cAAA,GAAG,EAAEF,KAAK,CAACG;AAAnH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4BH,KAAK,CAACG;AAAlC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,SAAS,EAAC,iBAAlB;AAAoC,cAAA,OAAO,EAAGC,CAAD,IAAKN,QAAQ,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA,WAAkEE,KAAK,CAACC,EAAxE;AAAA;AAAA;AAAA;AAAA,gBADJ;AAaH,OAdA;AAFL;AAAA;AAAA;AAAA;AAAA,YAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAnDuBpB,M;UAIFL,W,EAEDD,W;;;KANGM,M","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Spinner from '../../Components/Spinner/Spinner'\nimport { AxiosInstance } from '../../Network/AxiosInstance'\nimport { setSpinner } from '../../store/actions/Spinner'\nimport './Movies.css'\n\nexport default function Movies() {\n    //movies\n    const [movies, setMovies]=useState([])\n    //if loading\n    const isloading = useSelector((state)=> state.spinner.isloading)\n    //dispatch\n    const dispatch = useDispatch();\n\n    //getting movies \n    useEffect(()=>{\n        let isMounted = true;\n        AxiosInstance\n        .get('popular?api_key=0635aa13dcf8f77aa3d3a659b24086cc')\n        .then((res)=>{\n            setMovies(res.data.results);\n            dispatch(setSpinner(false));\n            \n        })\n        .catch((err)=>console.log(err))\n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\n    }, []);\n\n    const addToFav = ()=>{\n        console.log('added')\n    }\n\n  return (\n    <div className='container-fluid '>\n        <h1 className='p-3'>Movies</h1>\n        {isloading ? <Spinner /> :\n            <div className='row d-flex justify-content-center '>\n                {/* looping over the movies list */}\n                {movies.map(movie => {\n                    return (\n                        <div className=\"card col-3 mx-2 my-2 movie-card-background \" key={movie.id}>\n                            <Link to={`/movie/${movie.id}`} >\n                                <img src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`} className=\"card-img-top movie-card\" alt={movie.title} />\n                            </Link>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">{movie.title}</h5>\n                                <button className='btn btn-primary' onClick={(e)=>addToFav()}>add to fav</button>\n                            </div>\n                            \n                        </div>\n                        \n                    )\n                })}\n            </div>}\n\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}