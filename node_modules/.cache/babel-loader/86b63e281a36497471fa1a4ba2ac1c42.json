{"ast":null,"code":"var _jsxFileName = \"/home/shady/iti/react/react practice/movieapp/src/Pages/Movies/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../../Components/Spinner/Spinner\";\nimport { AxiosInstance } from \"../../Network/AxiosInstance\";\nimport { addToFavorites } from \"../../store/actions/Favorites\";\nimport { setSpinner } from \"../../store/actions/Spinner\";\nimport \"./Movies.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Movies() {\n  _s();\n\n  //movies\n  const [movies, setMovies] = useState([]); //if loading\n\n  const isloading = useSelector(state => state.spinner.isloading); //dispatch\n\n  const dispatch = useDispatch(); //getting movies API\n\n  useEffect(() => {\n    let isMounted = true;\n    AxiosInstance.get(\"popular?api_key=0635aa13dcf8f77aa3d3a659b24086cc\").then(res => {\n      setMovies(res.data.results);\n      dispatch(setSpinner(false));\n    }).catch(err => console.log(err));\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, []); //add to favorites\n\n  const addToFav = () => {\n    dispatch(addToFavorites(movies.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid \",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"p-3\",\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), isloading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex justify-content-center \",\n      children: movies.map(movie => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card col-3 mx-2 my-2 movie-card-background \",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/movie/${movie.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`,\n              className: \"card-img-top movie-card\",\n              alt: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => {\n                dispatch(addToFavorites(movie.id));\n              },\n              children: \"add to fav\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Movies, \"QoaAMrvoJihTEU9GeYFnxcWSlbE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/home/shady/iti/react/react practice/movieapp/src/Pages/Movies/Movies.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","Spinner","AxiosInstance","addToFavorites","setSpinner","Movies","movies","setMovies","isloading","state","spinner","dispatch","isMounted","get","then","res","data","results","catch","err","console","log","addToFav","id","map","movie","backdrop_path","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAO,cAAP;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC,CAF+B,CAG/B;;AACA,QAAMW,SAAS,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcF,SAA1B,CAA7B,CAJ+B,CAK/B;;AACA,QAAMG,QAAQ,GAAGb,WAAW,EAA5B,CAN+B,CAQ/B;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,SAAS,GAAG,IAAhB;AACAV,IAAAA,aAAa,CAACW,GAAd,CAAkB,kDAAlB,EACGC,IADH,CACSC,GAAD,IAAS;AACbR,MAAAA,SAAS,CAACQ,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAT;AACAN,MAAAA,QAAQ,CAACP,UAAU,CAAC,KAAD,CAAX,CAAR;AACD,KAJH,EAKGc,KALH,CAKUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB;AAMA,WAAO,MAAM;AACXP,MAAAA,SAAS,GAAG,KAAZ;AACD,KAFD,CARc,CAUX;AACJ,GAXQ,EAWN,EAXM,CAAT,CAT+B,CAsB/B;;AACA,QAAMU,QAAQ,GAAG,MAAM;AACrBX,IAAAA,QAAQ,CAACR,cAAc,CAACG,MAAM,CAACiB,EAAR,CAAf,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGf,SAAS,gBACR,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA,gBAEGF,MAAM,CAACkB,GAAP,CAAYC,KAAD,IAAW;AACrB,4BACE;AACE,UAAA,SAAS,EAAC,6CADZ;AAAA,kCAIE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASA,KAAK,CAACF,EAAG,EAA7B;AAAA,mCACE;AACE,cAAA,GAAG,EAAG,mCAAkCE,KAAK,CAACC,aAAc,EAD9D;AAEE,cAAA,SAAS,EAAC,yBAFZ;AAGE,cAAA,GAAG,EAAED,KAAK,CAACE;AAHb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF,eAWE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4BF,KAAK,CAACE;AAAlC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,SAAS,EAAC,iBADZ;AAEE,cAAA,OAAO,EAAE,MAAM;AACbhB,gBAAAA,QAAQ,CAACR,cAAc,CAACsB,KAAK,CAACF,EAAP,CAAf,CAAR;AACD,eAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA,WAEOE,KAAK,CAACF,EAFb;AAAA;AAAA;AAAA;AAAA,gBADF;AAyBD,OA1BA;AAFH;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GAlEuBlB,M;UAIJN,W,EAEDD,W;;;KANKO,M","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../../Components/Spinner/Spinner\";\nimport { AxiosInstance } from \"../../Network/AxiosInstance\";\nimport { addToFavorites } from \"../../store/actions/Favorites\";\nimport { setSpinner } from \"../../store/actions/Spinner\";\nimport \"./Movies.css\";\n\nexport default function Movies() {\n  //movies\n  const [movies, setMovies] = useState([]);\n  //if loading\n  const isloading = useSelector((state) => state.spinner.isloading);\n  //dispatch\n  const dispatch = useDispatch();\n\n  //getting movies API\n  useEffect(() => {\n    let isMounted = true;\n    AxiosInstance.get(\"popular?api_key=0635aa13dcf8f77aa3d3a659b24086cc\")\n      .then((res) => {\n        setMovies(res.data.results);\n        dispatch(setSpinner(false));\n      })\n      .catch((err) => console.log(err));\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, []);\n\n  //add to favorites\n  const addToFav = () => {\n    dispatch(addToFavorites(movies.id));\n  };\n\n  return (\n    <div className=\"container-fluid \">\n      <h1 className=\"p-3\">Movies</h1>\n      {isloading ? (\n        <Spinner />\n      ) : (\n        <div className=\"row d-flex justify-content-center \">\n          {/* looping over the movies list */}\n          {movies.map((movie) => {\n            return (\n              <div\n                className=\"card col-3 mx-2 my-2 movie-card-background \"\n                key={movie.id}\n              >\n                <Link to={`/movie/${movie.id}`}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`}\n                    className=\"card-img-top movie-card\"\n                    alt={movie.title}\n                  />\n                </Link>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{movie.title}</h5>\n                  <button\n                    className=\"btn btn-primary\"\n                    onClick={() => {\n                      dispatch(addToFavorites(movie.id));\n                    }}\n                  >\n                    add to fav\n                  </button>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}