{"ast":null,"code":"var _jsxFileName = \"/home/shady/iti/react/react practice/movieapp/src/Pages/Movies/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../../Components/Spinner/Spinner';\nimport { AxiosInstance } from '../../Network/AxiosInstance';\nimport { addToFavorites } from '../../store/actions/Favorites';\nimport { setSpinner } from '../../store/actions/Spinner';\nimport { increaseCounter } from '../../store/actions/Counter';\nimport './Movies.css'; //fontawesome\n\nimport ReactDOM from 'react-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Movies() {\n  _s();\n\n  //fontawesome\n  const heart = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    icon: faHeart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 19\n  }, this); //movies\n\n\n  const [movies, setMovies] = useState([]);\n  movie = window.movie; //if loading\n\n  const isloading = useSelector(state => state.spinner.isloading); //favorite movies\n\n  const favorites_list = useSelector(state => state.favorites.favorites); //number of fav movies\n\n  const counter = useSelector(state => state.counter.counter); //dispatch\n\n  const dispatch = useDispatch(); //getting movies API\n\n  useEffect(() => {\n    let isMounted = true;\n    AxiosInstance.get('popular?api_key=0635aa13dcf8f77aa3d3a659b24086cc').then(res => {\n      setMovies(res.data.results);\n      dispatch(setSpinner(false));\n    }).catch(err => console.log(err));\n    return () => {\n      isMounted = false;\n    }; // cleanup toggles value, if unmounted\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid \",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"p-3\",\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), isloading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex justify-content-center \",\n      children: movies.map(movie => {\n        const found = favorites_list.includes(movie) ? true : false;\n        return (\n          /*#__PURE__*/\n          // movieimage\n          _jsxDEV(\"div\", {\n            className: \"card col-3 mx-2 my-2 movie-card-background \",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/movie/${movie.id}`,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`,\n                className: \"card-img-top movie-card\",\n                alt: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this), found ? /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"heart-red\",\n                onClick: () => {\n                  const index = favorites_list.indexOf(movie);\n                  favorites_list.splice(index, 1); // 2nd parameter means remove one item only\n\n                  const new_counter = counter - 1;\n                  dispatch(increaseCounter(new_counter));\n                },\n                children: heart\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this) // else\n              : /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"heart-gray\",\n                onClick: () => {\n                  favorites_list.push(movie);\n                  dispatch(addToFavorites(favorites_list));\n                  const new_counter = counter + 1;\n                  dispatch(increaseCounter(new_counter));\n                },\n                children: heart\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)]\n          }, movie.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Movies, \"kx+t/9l+LCqOsH5fEFvllc3yo1E=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/home/shady/iti/react/react practice/movieapp/src/Pages/Movies/Movies.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","Spinner","AxiosInstance","addToFavorites","setSpinner","increaseCounter","ReactDOM","FontAwesomeIcon","faHeart","Movies","heart","movies","setMovies","movie","window","isloading","state","spinner","favorites_list","favorites","counter","dispatch","isMounted","get","then","res","data","results","catch","err","console","log","map","found","includes","id","backdrop_path","title","index","indexOf","splice","new_counter","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Spinner from '../../Components/Spinner/Spinner'\nimport { AxiosInstance } from '../../Network/AxiosInstance'\nimport { addToFavorites } from '../../store/actions/Favorites'\nimport { setSpinner } from '../../store/actions/Spinner'\nimport { increaseCounter } from '../../store/actions/Counter'\nimport './Movies.css'\n//fontawesome\nimport ReactDOM from 'react-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Movies() {\n    //fontawesome\n    const heart = <FontAwesomeIcon icon={faHeart} />\n    //movies\n    const [movies, setMovies]=useState([])\n    movie = window.movie\n    //if loading\n    const isloading = useSelector((state)=> state.spinner.isloading)\n    //favorite movies\n    const favorites_list = useSelector((state)=> state.favorites.favorites)\n    //number of fav movies\n    const counter = useSelector((state)=> state.counter.counter)\n    //dispatch\n    const dispatch = useDispatch();\n\n    //getting movies API\n    useEffect(()=>{\n        let isMounted = true;\n        AxiosInstance\n        .get('popular?api_key=0635aa13dcf8f77aa3d3a659b24086cc')\n        .then((res)=>{\n            setMovies(res.data.results);\n            dispatch(setSpinner(false));\n        })\n        .catch((err)=>console.log(err))\n        \n        return () => { isMounted = false }; // cleanup toggles value, if unmounted\n    }, []);\n\n\n  return (\n    <div className='container-fluid '>\n        <h1 className='p-3'>Movies</h1>\n        {isloading ? <Spinner /> :\n            <div className='row d-flex justify-content-center '>\n                {/* looping over the movies list */}\n                {movies.map(movie => {\n                    const found = favorites_list.includes(movie)? true:false\n                    return (\n                        // movieimage\n                        <div className=\"card col-3 mx-2 my-2 movie-card-background \" key={movie.id}>\n                            <Link to={`/movie/${movie.id}`} >\n                                <img src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`} className=\"card-img-top movie-card\" alt={movie.title} />\n                            </Link>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">{movie.title}</h5>\n\n                            {/* if the movie is already in the favorites */}\n                                {found ? \n                                \n                                <a  className='heart-red'\n                                onClick=\n                                {()=>{\n                                    const index = favorites_list.indexOf(movie);\n                                    favorites_list.splice(index, 1); // 2nd parameter means remove one item only\n                                    const new_counter = counter-1\n                                    dispatch(increaseCounter(new_counter))\n                                }}>\n                                   {heart}\n                                </a>\n                                // else\n                                :\n                                <a  className='heart-gray'\n                                onClick=\n                                {()=>{\n                                    favorites_list.push(movie)\n                                    dispatch(addToFavorites(favorites_list))\n                                    const new_counter = counter+1\n                                    dispatch(increaseCounter(new_counter))\n                                }}>\n                                   {heart}\n                                </a>}\n                            </div>\n                            \n                        </div>\n                        \n                    )\n                })}\n            </div>}\n\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}